{"ast":null,"code":"import _slicedToArray from\"E:/Projects/netflix-clone/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import\"./LoginScreen.css\";import SignInScreen from\"./SignInScreen\";import AboutApp from\"./AboutApp\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function LoginScreen(prop){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),show=_useState2[0],handleShow=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),signIn=_useState4[0],setSignIn=_useState4[1];var handleSignInUser=function handleSignInUser(userDetail){// console.log(userDetail)\nprop.handleUser(userDetail);};var transitionNavBar=function transitionNavBar(){if(window.scrollY>100){handleShow(true);}else{handleShow(false);}};useEffect(function(){window.addEventListener(\"scroll\",transitionNavBar);return function(){window.removeEventListener(\"scroll\",transitionNavBar);};},[]);var loginStatus=function loginStatus(status){setSignIn(status);console.log(status);};return/*#__PURE__*/_jsxs(\"div\",{className:\"loginScreen\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"login_bg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"loginNav \".concat(show&&\"loginNavBg\"),children:[/*#__PURE__*/_jsx(\"img\",{className:\"logo\",src:\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\",alt:\"\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"right\",children:[/*#__PURE__*/_jsxs(\"select\",{name:\"\",id:\"\",className:\"langauge navlang\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"English\"}),/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Hindi\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return setSignIn(true);},className:\"signbtn\",children:\"Sign In\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bggradiant\"}),/*#__PURE__*/_jsx(\"div\",{className:\"loginBody\",children:signIn?/*#__PURE__*/_jsx(SignInScreen,{handleSignInUser:handleSignInUser,handlenewUser:prop.handleNewUser,status:prop.status,textcolor:prop.color}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Unlimited movies, TV shows and more.\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Watch anywhere. Cancel anytime.\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Ready to watch? Enter your email to create or restart your membership.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"loginScreenInput\",children:/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email Address\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return setSignIn(true);},className:\"getstartbtn\",children:\"GET STARTTED\"})]})})]})}),signIn?null:/*#__PURE__*/_jsx(\"div\",{className:\"borderbottom\"})]}),signIn?null:/*#__PURE__*/_jsx(AboutApp,{loginStatus:loginStatus})]});}export default LoginScreen;","map":{"version":3,"sources":["E:/Projects/netflix-clone/src/Components/LoginScreen.jsx"],"names":["React","useState","useEffect","SignInScreen","AboutApp","LoginScreen","prop","show","handleShow","signIn","setSignIn","handleSignInUser","userDetail","handleUser","transitionNavBar","window","scrollY","addEventListener","removeEventListener","loginStatus","status","console","log","handleNewUser","color"],"mappings":"4GAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAO,mBAAP,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,C,6IAEA,QAASC,CAAAA,WAAT,CAAqBC,IAArB,CAA2B,CACzB,cAA2BL,QAAQ,CAAC,KAAD,CAAnC,wCAAOM,IAAP,eAAaC,UAAb,eACA,eAA4BP,QAAQ,CAAC,KAAD,CAApC,yCAAOQ,MAAP,eAAeC,SAAf,eACA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,UAAD,CAAgB,CACvC;AACAN,IAAI,CAACO,UAAL,CAAgBD,UAAhB,EACD,CAHD,CAKA,GAAME,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC7B,GAAIC,MAAM,CAACC,OAAP,CAAiB,GAArB,CAA0B,CACxBR,UAAU,CAAC,IAAD,CAAV,CACD,CAFD,IAEO,CACLA,UAAU,CAAC,KAAD,CAAV,CACD,CACF,CAND,CAOAN,SAAS,CAAC,UAAM,CACda,MAAM,CAACE,gBAAP,CAAwB,QAAxB,CAAkCH,gBAAlC,EACA,MAAO,WAAM,CACXC,MAAM,CAACG,mBAAP,CAA2B,QAA3B,CAAqCJ,gBAArC,EACD,CAFD,CAGD,CALQ,CAKN,EALM,CAAT,CAOA,GAAMK,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,MAAD,CAAY,CAC9BV,SAAS,CAACU,MAAD,CAAT,CACAC,OAAO,CAACC,GAAR,CAAYF,MAAZ,EACD,CAHD,CAKA,mBACE,aAAK,SAAS,CAAC,aAAf,wBACE,aAAK,SAAS,CAAC,UAAf,wBACE,aAAK,SAAS,oBAAcb,IAAI,EAAI,YAAtB,CAAd,wBACE,YACE,SAAS,CAAC,MADZ,CAEE,GAAG,CAAC,2EAFN,CAGE,GAAG,CAAC,EAHN,EADF,cAME,aAAK,SAAS,CAAC,OAAf,wBACE,gBAAQ,IAAI,CAAC,EAAb,CAAgB,EAAE,CAAC,EAAnB,CAAsB,SAAS,CAAC,kBAAhC,wBACE,eAAQ,KAAK,CAAC,EAAd,qBADF,cAEE,eAAQ,KAAK,CAAC,EAAd,mBAFF,GADF,cAKE,eAAQ,OAAO,CAAE,yBAAMG,CAAAA,SAAS,CAAC,IAAD,CAAf,EAAjB,CAAwC,SAAS,CAAC,SAAlD,qBALF,GANF,GADF,cAkBE,YAAK,SAAS,CAAC,YAAf,EAlBF,cAmBE,YAAK,SAAS,CAAC,WAAf,UACGD,MAAM,cACL,KAAC,YAAD,EACE,gBAAgB,CAAEE,gBADpB,CAEE,aAAa,CAAEL,IAAI,CAACiB,aAFtB,CAGE,MAAM,CAAIjB,IAAI,CAACc,MAHjB,CAIE,SAAS,CAAId,IAAI,CAACkB,KAJpB,EADK,cAQL,wCACE,4DADF,cAEE,uDAFF,cAGE,8FAHF,cAQE,YAAK,SAAS,CAAC,kBAAf,uBACE,qCACE,cAAO,IAAI,CAAC,OAAZ,CAAoB,WAAW,CAAC,eAAhC,EADF,cAEE,eACE,OAAO,CAAE,yBAAMd,CAAAA,SAAS,CAAC,IAAD,CAAf,EADX,CAEE,SAAS,CAAC,aAFZ,0BAFF,GADF,EARF,GATJ,EAnBF,CAkDGD,MAAM,CAAG,IAAH,cAAU,YAAK,SAAS,CAAC,cAAf,EAlDnB,GADF,CAqDGA,MAAM,CAAG,IAAH,cAAU,KAAC,QAAD,EAAU,WAAW,CAAIU,WAAzB,EArDnB,GADF,CA0DD,CAED,cAAed,CAAAA,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./LoginScreen.css\";\r\nimport SignInScreen from \"./SignInScreen\";\r\nimport AboutApp from \"./AboutApp\";\r\n\r\nfunction LoginScreen(prop) {\r\n  const [show, handleShow] = useState(false);\r\n  const [signIn, setSignIn] = useState(false);\r\n  const handleSignInUser = (userDetail) => {\r\n    // console.log(userDetail)\r\n    prop.handleUser(userDetail);\r\n  };\r\n\r\n  const transitionNavBar = () => {\r\n    if (window.scrollY > 100) {\r\n      handleShow(true);\r\n    } else {\r\n      handleShow(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", transitionNavBar);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", transitionNavBar);\r\n    };\r\n  }, []);\r\n\r\n  const loginStatus = (status) => {\r\n    setSignIn(status)\r\n    console.log(status)\r\n  }\r\n\r\n  return (\r\n    <div className=\"loginScreen\">\r\n      <div className=\"login_bg\">\r\n        <div className={`loginNav ${show && \"loginNavBg\"}`}>\r\n          <img\r\n            className=\"logo\"\r\n            src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\"\r\n            alt=\"\"\r\n          />\r\n          <div className=\"right\">\r\n            <select name=\"\" id=\"\" className=\"langauge navlang\">\r\n              <option value=\"\">English</option>\r\n              <option value=\"\">Hindi</option>\r\n            </select>\r\n            <button onClick={() => setSignIn(true)} className=\"signbtn\">\r\n              Sign In\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bggradiant\"></div>\r\n        <div className=\"loginBody\">\r\n          {signIn ? (\r\n            <SignInScreen\r\n              handleSignInUser={handleSignInUser}\r\n              handlenewUser={prop.handleNewUser}\r\n              status = {prop.status}\r\n              textcolor = {prop.color}\r\n            />\r\n          ) : (\r\n            <>\r\n              <h1>Unlimited movies, TV shows and more.</h1>\r\n              <h2>Watch anywhere. Cancel anytime.</h2>\r\n              <h3>\r\n                Ready to watch? Enter your email to create or restart your\r\n                membership.\r\n              </h3>\r\n\r\n              <div className=\"loginScreenInput\">\r\n                <form>\r\n                  <input type=\"email\" placeholder=\"Email Address\" />\r\n                  <button\r\n                    onClick={() => setSignIn(true)}\r\n                    className=\"getstartbtn\"\r\n                  >\r\n                    GET STARTTED\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n        {signIn ? null : <div className=\"borderbottom\"></div>}\r\n      </div>\r\n      {signIn ? null : <AboutApp loginStatus = {loginStatus}/>}\r\n      {/* <AboutApp /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginScreen;\r\n"]},"metadata":{},"sourceType":"module"}