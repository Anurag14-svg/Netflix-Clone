{"ast":null,"code":"import _slicedToArray from\"E:/Projects/netflix-clone/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import YouTube from'react-youtube';import movieTrailer from'movie-trailer';// import Navbar from './Navbar';\n// import requests from '../requests';\nimport Footer from'./Footer';// import Row from './Row';\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Movie(props){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),trailerURL=_useState2[0],setTrailerURL=_useState2[1];var opts={height:'700',width:'100%',playerVars:{// https://developers.google.com/youtube/player_parameters\nautoplay:1}};movieTrailer(props.moviedataplay.name||props.moviedataplay.title||props.moviedataplay.original_name||\"\").then(function(url){var urlParams=new URLSearchParams(new URL(url).search);setTrailerURL(urlParams.get('v'));}).catch(function(error){return console.log(error);});return/*#__PURE__*/_jsxs(\"div\",{className:\"movie\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"trailer\",children:trailerURL&&/*#__PURE__*/_jsx(YouTube,{videoId:trailerURL,opts:opts})}),/*#__PURE__*/_jsx(Footer,{})]});}export default Movie;","map":{"version":3,"sources":["E:/Projects/netflix-clone/src/Components/Movie.jsx"],"names":["React","useState","YouTube","movieTrailer","Footer","Movie","props","trailerURL","setTrailerURL","opts","height","width","playerVars","autoplay","moviedataplay","name","title","original_name","then","url","urlParams","URLSearchParams","URL","search","get","catch","error","console","log"],"mappings":"4GAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,MAAOC,CAAAA,YAAP,KAAyB,eAAzB,CACA;AACA;AACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA;wFAEA,QAASC,CAAAA,KAAT,CAAeC,KAAf,CAAsB,CAClB,cAAqCL,QAAQ,CAAC,EAAD,CAA7C,wCAAOM,UAAP,eAAoBC,aAApB,eACA,GAAMC,CAAAA,IAAI,CAAG,CACTC,MAAM,CAAE,KADC,CAETC,KAAK,CAAE,MAFE,CAGTC,UAAU,CAAE,CACV;AACAC,QAAQ,CAAE,CAFA,CAHH,CAAb,CAWAV,YAAY,CAACG,KAAK,CAACQ,aAAN,CAAoBC,IAApB,EAA4BT,KAAK,CAACQ,aAAN,CAAoBE,KAAhD,EAAyDV,KAAK,CAACQ,aAAN,CAAoBG,aAA7E,EAA8F,EAA/F,CAAZ,CACEC,IADF,CACO,SAACC,GAAD,CAAS,CACZ,GAAMC,CAAAA,SAAS,CAAG,GAAIC,CAAAA,eAAJ,CAAoB,GAAIC,CAAAA,GAAJ,CAAQH,GAAR,EAAaI,MAAjC,CAAlB,CACAf,aAAa,CAACY,SAAS,CAACI,GAAV,CAAc,GAAd,CAAD,CAAb,CACF,CAJF,EAKEC,KALF,CAKQ,SAACC,KAAD,QAAWC,CAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAX,EALR,EAMA,mBACI,aAAK,SAAS,CAAG,OAAjB,wBAEK,YAAK,SAAS,CAAC,SAAf,UACCnB,UAAU,eAAI,KAAC,OAAD,EAAS,OAAO,CAAIA,UAApB,CAAgC,IAAI,CAAIE,IAAxC,EADf,EAFL,cASK,KAAC,MAAD,IATL,GADJ,CAcH,CAED,cAAeJ,CAAAA,KAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport YouTube from 'react-youtube';\r\nimport movieTrailer from 'movie-trailer';\r\n// import Navbar from './Navbar';\r\n// import requests from '../requests';\r\nimport Footer from './Footer';\r\n// import Row from './Row';\r\n\r\nfunction Movie(props) {\r\n    const [trailerURL , setTrailerURL] = useState(\"\")\r\n    const opts = {\r\n        height: '700',\r\n        width: '100%',\r\n        playerVars: {\r\n          // https://developers.google.com/youtube/player_parameters\r\n          autoplay: 1,\r\n        },\r\n      };\r\n\r\n      \r\n\r\n    movieTrailer(props.moviedataplay.name || props.moviedataplay.title || props.moviedataplay.original_name || \"\")\r\n     .then((url) => {\r\n        const urlParams = new URLSearchParams(new URL(url).search);\r\n        setTrailerURL(urlParams.get('v'));\r\n     })\r\n     .catch((error) => console.log(error))\r\n    return (\r\n        <div className = \"movie\">\r\n             \r\n             <div className=\"trailer\">\r\n             {trailerURL && <YouTube videoId = {trailerURL} opts = {opts}/> } \r\n              \r\n             </div>\r\n             {/* <div className=\"details\">\r\n                 <img className =\"details_image\" src={`https://image.tmdb.org/t/p/original/${props.moviedataplay.image}`} alt=\"\" />\r\n             </div> */}\r\n             <Footer />\r\n             \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movie;\r\n"]},"metadata":{},"sourceType":"module"}