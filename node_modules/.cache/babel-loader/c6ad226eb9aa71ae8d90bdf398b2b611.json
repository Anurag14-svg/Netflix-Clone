{"ast":null,"code":"import _regeneratorRuntime from\"E:/Projects/netflix-clone/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"E:/Projects/netflix-clone/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"E:/Projects/netflix-clone/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{useHistory}from\"react-router-dom\";import axios from\"../axios\";import\"./Row.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var baseURL=\"https://image.tmdb.org/t/p/original/\";function Row(_ref){var title=_ref.title,fetchURL=_ref.fetchURL,isLarge=_ref.isLarge,getMoviedata=_ref.getMoviedata,margin=_ref.margin,equalLength=_ref.equalLength;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movies=_useState2[0],setMovies=_useState2[1];var history=useHistory();// const [trailerUrl, setTrailerUrl] = useState(\"\");\n// props.getMovieData(\"This is the value\")\nuseEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var request;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(fetchURL);case 2:request=_context.sent;// console.log(request)\nsetMovies(request.data.results);return _context.abrupt(\"return\",request);case 5:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[fetchURL]);var handleMovieClick=function handleMovieClick(val,image,desc){getMoviedata(val,image,desc);history.push(\"/film\");};return/*#__PURE__*/_jsxs(\"div\",{className:\"row \".concat(margin&&\"removeMargin\"),children:[/*#__PURE__*/_jsx(\"h2\",{children:title}),/*#__PURE__*/_jsx(\"div\",{className:\"row_posters \".concat(equalLength&&\"equallength\"),children:movies.map(function(movie){return/*#__PURE__*/_jsx(\"img\",{// onClick = {() => handleMovieClick()}\nonClick:function onClick(){return handleMovieClick((movie===null||movie===void 0?void 0:movie.title)||(movie===null||movie===void 0?void 0:movie.name)||(movie===null||movie===void 0?void 0:movie.original_name),movie.backdrop_path,movie.overview);},className:\"row_poster \".concat(isLarge&&\"row_posterLarge\"),src:\"\".concat(baseURL).concat(isLarge?movie.poster_path:movie.backdrop_path),alt:movie.name},movie.id);})})]});}export default Row;","map":{"version":3,"sources":["E:/Projects/netflix-clone/src/Components/Row.jsx"],"names":["React","useState","useEffect","useHistory","axios","baseURL","Row","title","fetchURL","isLarge","getMoviedata","margin","equalLength","movies","setMovies","history","fetchData","get","request","data","results","handleMovieClick","val","image","desc","push","map","movie","name","original_name","backdrop_path","overview","poster_path","id"],"mappings":"iUAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,KAAP,KAAkB,UAAlB,CACA,MAAO,WAAP,C,wFAGA,GAAMC,CAAAA,OAAO,CAAG,sCAAhB,CAEA,QAASC,CAAAA,GAAT,MAA2E,IAA5DC,CAAAA,KAA4D,MAA5DA,KAA4D,CAArDC,QAAqD,MAArDA,QAAqD,CAA3CC,OAA2C,MAA3CA,OAA2C,CAAlCC,YAAkC,MAAlCA,YAAkC,CAArBC,MAAqB,MAArBA,MAAqB,CAAdC,WAAc,MAAdA,WAAc,CACzE,cAA4BX,QAAQ,CAAC,EAAD,CAApC,wCAAOY,MAAP,eAAeC,SAAf,eACA,GAAMC,CAAAA,OAAO,CAAGZ,UAAU,EAA1B,CACA;AAEA;AAEAD,SAAS,CAAC,UAAM,SACCc,CAAAA,SADD,qIACd,qKACwBZ,CAAAA,KAAK,CAACa,GAAN,CAAUT,QAAV,CADxB,QACQU,OADR,eAEE;AACAJ,SAAS,CAACI,OAAO,CAACC,IAAR,CAAaC,OAAd,CAAT,CAHF,gCAISF,OAJT,wDADc,4CAOdF,SAAS,GACV,CARQ,CAQN,CAACR,QAAD,CARM,CAAT,CAWA,GAAMa,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,GAAD,CAAOC,KAAP,CAAeC,IAAf,CAAwB,CAE/Cd,YAAY,CAACY,GAAD,CAAOC,KAAP,CAAeC,IAAf,CAAZ,CACAT,OAAO,CAACU,IAAR,CAAa,OAAb,EACD,CAJD,CAQA,mBACE,aAAK,SAAS,eAASd,MAAM,EAAI,cAAnB,CAAd,wBACE,oBAAKJ,KAAL,EADF,cAEE,YAAK,SAAS,uBAAiBK,WAAW,EAAI,aAAhC,CAAd,UACGC,MAAM,CAACa,GAAP,CAAW,SAACC,KAAD,qBACV,YACA;AACE,OAAO,CAAI,yBAAMN,CAAAA,gBAAgB,CAAC,CAAAM,KAAK,OAAL,EAAAA,KAAK,SAAL,QAAAA,KAAK,CAAEpB,KAAP,IAAgBoB,KAAhB,SAAgBA,KAAhB,iBAAgBA,KAAK,CAAEC,IAAvB,IAA+BD,KAA/B,SAA+BA,KAA/B,iBAA+BA,KAAK,CAAEE,aAAtC,CAAD,CAAuDF,KAAK,CAACG,aAA7D,CAA6EH,KAAK,CAACI,QAAnF,CAAtB,EAFb,CAKE,SAAS,sBAAgBtB,OAAO,EAAI,iBAA3B,CALX,CAME,GAAG,WAAKJ,OAAL,SACDI,OAAO,CAAGkB,KAAK,CAACK,WAAT,CAAuBL,KAAK,CAACG,aADnC,CANL,CASE,GAAG,CAAEH,KAAK,CAACC,IATb,EAGOD,KAAK,CAACM,EAHb,CADU,EAAX,CADH,EAFF,GADF,CAqBD,CAED,cAAe3B,CAAAA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"../axios\";\r\nimport \"./Row.css\";\r\n\r\n\r\nconst baseURL = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title, fetchURL, isLarge, getMoviedata,margin,equalLength}) {\r\n  const [movies, setMovies] = useState([]);\r\n  const history = useHistory()\r\n  // const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n  // props.getMovieData(\"This is the value\")\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchURL);\r\n      // console.log(request)\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchURL]);\r\n\r\n\r\n  const handleMovieClick = (val , image , desc) => {\r\n    \r\n    getMoviedata(val , image , desc)\r\n    history.push(\"/film\")\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className={`row ${margin && \"removeMargin\"}`}>\r\n      <h2>{title}</h2>\r\n      <div className={`row_posters ${equalLength && \"equallength\"}`}>\r\n        {movies.map((movie) => (\r\n          <img\r\n          // onClick = {() => handleMovieClick()}\r\n            onClick = {() => handleMovieClick(movie?.title || movie?.name || movie?.original_name , movie.backdrop_path , movie.overview)}\r\n            key={movie.id}\r\n            \r\n            className={`row_poster ${isLarge && \"row_posterLarge\"}`}\r\n            src={`${baseURL}${\r\n              isLarge ? movie.poster_path : movie.backdrop_path\r\n            }`}\r\n            alt={movie.name}\r\n          />\r\n        ))}\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n"]},"metadata":{},"sourceType":"module"}