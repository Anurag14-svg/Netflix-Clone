{"ast":null,"code":"import React from\"react\";import\"./SearchedMovie.css\";import requests from\"../requests\";import Row from\"./Row\";import Footer from\"./Footer\";import{useHistory}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function SearchedMovie(_ref){var movieDATA=_ref.movieDATA,takingData=_ref.takingData;var history=useHistory();// const [data , setdata] = useState([])\nvar baseURL=\"https://image.tmdb.org/t/p/original/\";// console.log(movieDATA)\n// const moviedataArry = [movieDATA]\n// console.log(moviedataArry)\nvar datafromInnerNav=function datafromInnerNav(title,image,desc){takingData(title,image,desc);// console.log(title)\n// console.log(image)\n// console.log(desc)\n};var handleMovieClick=function handleMovieClick(title,image,desc){takingData(title,image,desc);history.push(\"/film\");};return/*#__PURE__*/_jsxs(\"div\",{className:\"searchMovie\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Searched Results:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"setOfMovies\",children:movieDATA.map(function(movie){return/*#__PURE__*/_jsx(\"img\",{// onClick = {() => handleMovieClick()}\nonClick:function onClick(){return handleMovieClick((movie===null||movie===void 0?void 0:movie.title)||(movie===null||movie===void 0?void 0:movie.name)||(movie===null||movie===void 0?void 0:movie.original_name),movie.backdrop_path,movie.overview);},className:\"movie_image\",src:movie.poster_path&&baseURL+movie.poster_path,alt:movie.name},movie.id);})}),/*#__PURE__*/_jsx(\"div\",{className:\"SearchRow\",children:/*#__PURE__*/_jsx(Row,{title:\"More like this\",fetchURL:requests.fetchActionMovies,isLarge:true,getMoviedata:datafromInnerNav,margin:true,equalLength:true})}),/*#__PURE__*/_jsx(Footer,{})]});}export default SearchedMovie;","map":{"version":3,"sources":["E:/Projects/netflix-clone/src/Components/SearchedMovie.jsx"],"names":["React","requests","Row","Footer","useHistory","SearchedMovie","movieDATA","takingData","history","baseURL","datafromInnerNav","title","image","desc","handleMovieClick","push","map","movie","name","original_name","backdrop_path","overview","poster_path","id","fetchActionMovies"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,qBAAP,CACA,MAAOC,CAAAA,QAAP,KAAqB,aAArB,CACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,OAASC,UAAT,KAA2B,kBAA3B,C,wFAEA,QAASC,CAAAA,aAAT,MAAiD,IAAxBC,CAAAA,SAAwB,MAAxBA,SAAwB,CAAbC,UAAa,MAAbA,UAAa,CACjD,GAAMC,CAAAA,OAAO,CAAGJ,UAAU,EAA1B,CACE;AACA,GAAMK,CAAAA,OAAO,CAAG,sCAAhB,CACA;AACA;AACA;AACA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAASC,KAAT,CAAiBC,IAAjB,CAA2B,CAClDN,UAAU,CAACI,KAAD,CAASC,KAAT,CAAiBC,IAAjB,CAAV,CACA;AACA;AACA;AACD,CALD,CAOA,GAAMC,CAAAA,gBAAgB,CAAE,QAAlBA,CAAAA,gBAAkB,CAACH,KAAD,CAASC,KAAT,CAAiBC,IAAjB,CAA0B,CAChDN,UAAU,CAACI,KAAD,CAASC,KAAT,CAAiBC,IAAjB,CAAV,CACAL,OAAO,CAACO,IAAR,CAAa,OAAb,EACD,CAHD,CAKA,mBACE,aAAK,SAAS,CAAC,aAAf,wBACE,yCADF,cAEE,YAAK,SAAS,CAAC,aAAf,UACGT,SAAS,CAACU,GAAV,CAAc,SAACC,KAAD,qBACb,YACE;AACA,OAAO,CAAI,yBAAMH,CAAAA,gBAAgB,CAAC,CAAAG,KAAK,OAAL,EAAAA,KAAK,SAAL,QAAAA,KAAK,CAAEN,KAAP,IAAgBM,KAAhB,SAAgBA,KAAhB,iBAAgBA,KAAK,CAAEC,IAAvB,IAA+BD,KAA/B,SAA+BA,KAA/B,iBAA+BA,KAAK,CAAEE,aAAtC,CAAD,CAAuDF,KAAK,CAACG,aAA7D,CAA6EH,KAAK,CAACI,QAAnF,CAAtB,EAFb,CAIE,SAAS,CAAC,aAJZ,CAKE,GAAG,CAAEJ,KAAK,CAACK,WAAN,EAAqBb,OAAO,CAAGQ,KAAK,CAACK,WAL5C,CAME,GAAG,CAAEL,KAAK,CAACC,IANb,EAGOD,KAAK,CAACM,EAHb,CADa,EAAd,CADH,EAFF,cAcE,YAAK,SAAS,CAAC,WAAf,uBACA,KAAC,GAAD,EACM,KAAK,CAAC,gBADZ,CAEM,QAAQ,CAAEtB,QAAQ,CAACuB,iBAFzB,CAGM,OAAO,KAHb,CAIM,YAAY,CAAId,gBAJtB,CAKM,MAAM,KALZ,CAMM,WAAW,KANjB,EADA,EAdF,cA0BE,KAAC,MAAD,IA1BF,GADF,CA8BD,CAED,cAAeL,CAAAA,aAAf","sourcesContent":["import React from \"react\";\r\nimport \"./SearchedMovie.css\";\r\nimport requests from \"../requests\";\r\nimport Row from \"./Row\";\r\nimport Footer from \"./Footer\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction SearchedMovie({ movieDATA ,takingData}) {\r\nconst history = useHistory()\r\n  // const [data , setdata] = useState([])\r\n  const baseURL = \"https://image.tmdb.org/t/p/original/\";\r\n  // console.log(movieDATA)\r\n  // const moviedataArry = [movieDATA]\r\n  // console.log(moviedataArry)\r\n  const datafromInnerNav = (title , image , desc ) => {\r\n    takingData(title , image , desc)\r\n    // console.log(title)\r\n    // console.log(image)\r\n    // console.log(desc)\r\n  }\r\n\r\n  const handleMovieClick =(title , image , desc) => {\r\n    takingData(title , image , desc)\r\n    history.push(\"/film\")\r\n  }\r\n\r\n  return (\r\n    <div className=\"searchMovie\">\r\n      <h1>Searched Results:</h1>\r\n      <div className=\"setOfMovies\">\r\n        {movieDATA.map((movie) => (\r\n          <img\r\n            // onClick = {() => handleMovieClick()}\r\n            onClick = {() => handleMovieClick(movie?.title || movie?.name || movie?.original_name , movie.backdrop_path , movie.overview)}\r\n            key={movie.id}\r\n            className=\"movie_image\"\r\n            src={movie.poster_path && baseURL + movie.poster_path}\r\n            alt={movie.name}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className=\"SearchRow\">\r\n      <Row\r\n            title=\"More like this\"\r\n            fetchURL={requests.fetchActionMovies}\r\n            isLarge\r\n            getMoviedata = {datafromInnerNav}\r\n            margin\r\n            equalLength\r\n            \r\n          />\r\n      </div>\r\n      \r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchedMovie;\r\n"]},"metadata":{},"sourceType":"module"}