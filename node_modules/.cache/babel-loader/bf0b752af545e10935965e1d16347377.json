{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\netflix-clone\\\\src\\\\Components\\\\MovieScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./MovieScreen.css\";\nimport Row from \"./Row\";\nimport requests from \"../requests\";\nimport Footer from \"./Footer\";\nimport Navbar from \"./Navbar\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MovieScreen(props) {\n  _s();\n\n  const history = useHistory(); // const baseURL = \"https://image.tmdb.org/t/p/original/\";\n\n  function truncate(str, n) {\n    return (str === null || str === void 0 ? void 0 : str.length) > n ? str.substr(0, n - 1) + \"...\" : str;\n  }\n\n  const getMoviedata = (title, image, desc) => {\n    props.datafromMovieScreenItself(title, image, desc);\n  };\n\n  const handleSeparateMovieShow = () => {\n    history.push('./movie');\n    props.getMoviedata(props.moviedata);\n  };\n\n  const getSearchMovie = searchMovieDATA => {\n    // console.log(searchMovieDATA)\n    props.gettingSearchedMovieData(searchMovieDATA);\n  }; //   console.log(title);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MovieScreen\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      getSearchMovie: getSearchMovie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movieScreen\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"movieScreenbanner\",\n        style: {\n          backgroundSize: \"cover\",\n          backgroundImage: `url(https://image.tmdb.org/t/p/original/${props.moviedata.image ? props.moviedata.image : \"/7IGKrY1f1KfwMipx9wZC4NRgIdF.jpg\"})`,\n          backgroundPosition: \"top center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movieShow\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"name\",\n            children: props.moviedata.title ? props.moviedata.title : \"Fifty Shades of Grey\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"moviebanner_buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSeparateMovieShow,\n              className: \" banner_button\",\n              children: \"Play\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \" banner_button\",\n              children: \"My List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"banner_description\",\n            children: truncate(props.moviedata.desc ? props.moviedata.desc : \"When college senior Anastasia Steele steps in for her sick roommate to interview prominent businessman Christian Grey for their campus paper, little does she realize the path her life will take. Christian, as enigmatic as he is rich and powerful, finds himself strangely drawn to Ana, and she to him. Though sexually inexperienced, Ana plunges headlong into an affair -- and learns that Christian's true sexual proclivities push the boundaries of pain and pleasure.\", 150)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gradiant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"suggestion\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          title: \"More like this\",\n          fetchURL: requests.fetchActionMovies,\n          isLarge: true,\n          getMoviedata: getMoviedata\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          title: \"Suggestions\",\n          fetchURL: requests.fetchRomanceMovies,\n          isLarge: true,\n          getMoviedata: getMoviedata\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MovieScreen, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = MovieScreen;\nexport default MovieScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieScreen\");","map":{"version":3,"sources":["E:/Projects/netflix-clone/src/Components/MovieScreen.jsx"],"names":["React","Row","requests","Footer","Navbar","useHistory","MovieScreen","props","history","truncate","str","n","length","substr","getMoviedata","title","image","desc","datafromMovieScreenItself","handleSeparateMovieShow","push","moviedata","getSearchMovie","searchMovieDATA","gettingSearchedMovieData","backgroundSize","backgroundImage","backgroundPosition","fetchActionMovies","fetchRomanceMovies"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./MovieScreen.css\";\r\nimport Row from \"./Row\";\r\nimport requests from \"../requests\";\r\nimport Footer from \"./Footer\";\r\nimport Navbar from \"./Navbar\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction MovieScreen(props) {\r\n  const history = useHistory()\r\n  // const baseURL = \"https://image.tmdb.org/t/p/original/\";\r\n  function truncate(str, n) {\r\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n  }\r\n\r\n  const getMoviedata = (title, image, desc) => {\r\n    props.datafromMovieScreenItself(title, image, desc);\r\n  };\r\n\r\n  const handleSeparateMovieShow = () => {\r\n    history.push('./movie')\r\n    props.getMoviedata(props.moviedata)\r\n  }\r\n\r\n  const getSearchMovie = (searchMovieDATA) => {\r\n    // console.log(searchMovieDATA)\r\n    props.gettingSearchedMovieData(searchMovieDATA)\r\n  }\r\n\r\n  //   console.log(title);\r\n  return (\r\n    <div className=\"MovieScreen\">\r\n      <Navbar getSearchMovie={getSearchMovie}/>\r\n      <div className=\"movieScreen\">\r\n        <header\r\n          className=\"movieScreenbanner\"\r\n          style={{\r\n            backgroundSize: \"cover\",\r\n            backgroundImage: `url(https://image.tmdb.org/t/p/original/${\r\n              props.moviedata.image\r\n                ? props.moviedata.image\r\n                : \"/7IGKrY1f1KfwMipx9wZC4NRgIdF.jpg\"\r\n            })`,\r\n            backgroundPosition: \"top center\",\r\n          }}\r\n        >\r\n          <div className=\"movieShow\">\r\n            <h1 className=\"name\">\r\n              {props.moviedata.title\r\n                ? props.moviedata.title\r\n                : \"Fifty Shades of Grey\"}\r\n            </h1>\r\n            <div className=\"moviebanner_buttons\">\r\n              <button onClick = {handleSeparateMovieShow} className=\" banner_button\">Play</button>\r\n              <button className=\" banner_button\">My List</button>\r\n            </div>\r\n            <h1 className=\"banner_description\">\r\n              {truncate(\r\n                props.moviedata.desc\r\n                  ? props.moviedata.desc\r\n                  : \"When college senior Anastasia Steele steps in for her sick roommate to interview prominent businessman Christian Grey for their campus paper, little does she realize the path her life will take. Christian, as enigmatic as he is rich and powerful, finds himself strangely drawn to Ana, and she to him. Though sexually inexperienced, Ana plunges headlong into an affair -- and learns that Christian's true sexual proclivities push the boundaries of pain and pleasure.\",\r\n                150\r\n              )}\r\n            </h1>\r\n          </div>\r\n\r\n          <div className=\"gradiant\"></div>\r\n        </header>\r\n        <div className=\"suggestion\">\r\n          <Row\r\n            title=\"More like this\"\r\n            fetchURL={requests.fetchActionMovies}\r\n            isLarge\r\n            getMoviedata={getMoviedata}\r\n          />\r\n          <Row\r\n            title=\"Suggestions\"\r\n            fetchURL={requests.fetchRomanceMovies}\r\n            isLarge\r\n            getMoviedata={getMoviedata}\r\n          />\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieScreen;\r\n"]},"metadata":{},"sourceType":"module"}