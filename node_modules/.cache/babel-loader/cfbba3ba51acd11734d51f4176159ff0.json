{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\netflix-clone\\\\src\\\\Components\\\\Movie.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport YouTube from 'react-youtube';\nimport movieTrailer from 'movie-trailer'; // import Navbar from './Navbar';\n// import requests from '../requests';\n\nimport Footer from './Footer'; // import Row from './Row';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Movie(props) {\n  _s();\n\n  const [trailerURL, setTrailerURL] = useState(\"\");\n  const opts = {\n    height: '700',\n    width: '100%',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1\n    }\n  };\n  movieTrailer(props.moviedataplay.name || props.moviedataplay.title || props.moviedataplay.original_name || \"\").then(url => {\n    const urlParams = new URLSearchParams(new URL(url).search);\n    setTrailerURL(urlParams.get('v'));\n  }).catch(error => console.log(error));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trailer\",\n      children: trailerURL && /*#__PURE__*/_jsxDEV(YouTube, {\n        videoId: trailerURL,\n        opts: opts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Movie, \"GVNeI7Nd994fOr/YynKzNKzyBbA=\");\n\n_c = Movie;\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["E:/Projects/netflix-clone/src/Components/Movie.jsx"],"names":["React","useState","YouTube","movieTrailer","Footer","Movie","props","trailerURL","setTrailerURL","opts","height","width","playerVars","autoplay","moviedataplay","name","title","original_name","then","url","urlParams","URLSearchParams","URL","search","get","catch","error","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,YAAP,MAAyB,eAAzB,C,CACA;AACA;;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CACA;;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAClB,QAAM,CAACC,UAAD,EAAcC,aAAd,IAA+BP,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAMQ,IAAI,GAAG;AACTC,IAAAA,MAAM,EAAE,KADC;AAETC,IAAAA,KAAK,EAAE,MAFE;AAGTC,IAAAA,UAAU,EAAE;AACV;AACAC,MAAAA,QAAQ,EAAE;AAFA;AAHH,GAAb;AAWAV,EAAAA,YAAY,CAACG,KAAK,CAACQ,aAAN,CAAoBC,IAApB,IAA4BT,KAAK,CAACQ,aAAN,CAAoBE,KAAhD,IAAyDV,KAAK,CAACQ,aAAN,CAAoBG,aAA7E,IAA8F,EAA/F,CAAZ,CACEC,IADF,CACQC,GAAD,IAAS;AACZ,UAAMC,SAAS,GAAG,IAAIC,eAAJ,CAAoB,IAAIC,GAAJ,CAAQH,GAAR,EAAaI,MAAjC,CAAlB;AACAf,IAAAA,aAAa,CAACY,SAAS,CAACI,GAAV,CAAc,GAAd,CAAD,CAAb;AACF,GAJF,EAKEC,KALF,CAKSC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CALnB;AAMA,sBACI;AAAK,IAAA,SAAS,EAAG,OAAjB;AAAA,4BAEK;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBACCnB,UAAU,iBAAI,QAAC,OAAD;AAAS,QAAA,OAAO,EAAIA,UAApB;AAAgC,QAAA,IAAI,EAAIE;AAAxC;AAAA;AAAA;AAAA;AAAA;AADf;AAAA;AAAA;AAAA;AAAA,YAFL,eASK,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YATL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GAjCQJ,K;;KAAAA,K;AAmCT,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport YouTube from 'react-youtube';\r\nimport movieTrailer from 'movie-trailer';\r\n// import Navbar from './Navbar';\r\n// import requests from '../requests';\r\nimport Footer from './Footer';\r\n// import Row from './Row';\r\n\r\nfunction Movie(props) {\r\n    const [trailerURL , setTrailerURL] = useState(\"\")\r\n    const opts = {\r\n        height: '700',\r\n        width: '100%',\r\n        playerVars: {\r\n          // https://developers.google.com/youtube/player_parameters\r\n          autoplay: 1,\r\n        },\r\n      };\r\n\r\n      \r\n\r\n    movieTrailer(props.moviedataplay.name || props.moviedataplay.title || props.moviedataplay.original_name || \"\")\r\n     .then((url) => {\r\n        const urlParams = new URLSearchParams(new URL(url).search);\r\n        setTrailerURL(urlParams.get('v'));\r\n     })\r\n     .catch((error) => console.log(error))\r\n    return (\r\n        <div className = \"movie\">\r\n             \r\n             <div className=\"trailer\">\r\n             {trailerURL && <YouTube videoId = {trailerURL} opts = {opts}/> } \r\n              \r\n             </div>\r\n             {/* <div className=\"details\">\r\n                 <img className =\"details_image\" src={`https://image.tmdb.org/t/p/original/${props.moviedataplay.image}`} alt=\"\" />\r\n             </div> */}\r\n             <Footer />\r\n             \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movie;\r\n"]},"metadata":{},"sourceType":"module"}