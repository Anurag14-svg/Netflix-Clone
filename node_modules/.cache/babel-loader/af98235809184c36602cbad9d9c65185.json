{"ast":null,"code":"import _objectSpread from\"E:/Projects/netflix-clone/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"E:/Projects/netflix-clone/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import\"./SignInScreen.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function SignInScreen(props){var _useState=useState({username:\"\",password:\"\"}),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setuser=_useState2[1];var register=function register(e){e.preventDefault();props.handlenewUser(user);};var signIn=function signIn(e){e.preventDefault();// console.log(user)\nprops.handleSignInUser(user);};return/*#__PURE__*/_jsx(\"div\",{className:\"signinScren\",children:/*#__PURE__*/_jsxs(\"form\",{action:\"\",children:[/*#__PURE__*/_jsx(\"p\",{style:{textAlign:\"left\",color:\"\".concat(!props.textcolor?\"green\":\"red\")},children:props.status}),/*#__PURE__*/_jsx(\"h1\",{children:\"Sign In\"}),/*#__PURE__*/_jsx(\"input\",{value:user.username,onChange:function onChange(e){return setuser(_objectSpread(_objectSpread({},user),{},{username:e.target.value}));},type:\"email\",placeholder:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{value:user.password,onChange:function onChange(e){return setuser(_objectSpread(_objectSpread({},user),{},{password:e.target.value}));},type:\"password\",placeholder:\"Password\"}),/*#__PURE__*/_jsx(\"button\",{onClick:signIn,type:\"submit\",children:\"Sign In\"}),/*#__PURE__*/_jsxs(\"h4\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"grayText\",children:\"New to Netflix?\"}),\" \",/*#__PURE__*/_jsx(\"span\",{className:\"SignUpLink\",onClick:register,children:\"Sign Up now.\"}),\" \"]})]})});}export default SignInScreen;","map":{"version":3,"sources":["E:/Projects/netflix-clone/src/Components/SignInScreen.jsx"],"names":["React","useState","SignInScreen","props","username","password","user","setuser","register","e","preventDefault","handlenewUser","signIn","handleSignInUser","textAlign","color","textcolor","status","target","value"],"mappings":"uNAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAO,oBAAP,C,wFAEA,QAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,CACzB,cAAwBF,QAAQ,CAAC,CAC7BG,QAAQ,CAAE,EADmB,CAE7BC,QAAQ,CAAE,EAFmB,CAAD,CAAhC,wCAAOC,IAAP,eAAaC,OAAb,eAKA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,CAAD,CAAM,CACnBA,CAAC,CAACC,cAAF,GACAP,KAAK,CAACQ,aAAN,CAAoBL,IAApB,EACH,CAHD,CAIA,GAAMM,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACH,CAAD,CAAM,CACjBA,CAAC,CAACC,cAAF,GACA;AACAP,KAAK,CAACU,gBAAN,CAAuBP,IAAvB,EACH,CAJD,CAMF,mBACE,YAAK,SAAS,CAAC,aAAf,uBACE,cAAM,MAAM,CAAC,EAAb,wBACE,UAAG,KAAK,CAAI,CACVQ,SAAS,CAAG,MADF,CAEVC,KAAK,WAAM,CAACZ,KAAK,CAACa,SAAP,CAAmB,OAAnB,CAA6B,KAAnC,CAFK,CAAZ,UAIKb,KAAK,CAACc,MAJX,EADF,cAME,+BANF,cAOE,cAAO,KAAK,CAAIX,IAAI,CAACF,QAArB,CAA+B,QAAQ,CAAI,kBAACK,CAAD,QAAMF,CAAAA,OAAO,gCAAKD,IAAL,MAAWF,QAAQ,CAAGK,CAAC,CAACS,MAAF,CAASC,KAA/B,GAAb,EAA3C,CAAgG,IAAI,CAAC,OAArG,CAA6G,WAAW,CAAC,OAAzH,EAPF,cAQE,cAAO,KAAK,CAAIb,IAAI,CAACD,QAArB,CAA+B,QAAQ,CAAI,kBAACI,CAAD,QAAMF,CAAAA,OAAO,gCAAKD,IAAL,MAAWD,QAAQ,CAAGI,CAAC,CAACS,MAAF,CAASC,KAA/B,GAAb,EAA3C,CAAgG,IAAI,CAAC,UAArG,CAAgH,WAAW,CAAC,UAA5H,EARF,cASE,eAAQ,OAAO,CAAEP,MAAjB,CAAyB,IAAI,CAAC,QAA9B,qBATF,cAUE,mCACE,aAAM,SAAS,CAAC,UAAhB,6BADF,CACoD,GADpD,cAEE,aAAM,SAAS,CAAC,YAAhB,CAA6B,OAAO,CAAEJ,QAAtC,0BAFF,CAEsE,GAFtE,GAVF,GADF,EADF,CAmBD,CAED,cAAeN,CAAAA,YAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./SignInScreen.css\";\r\n\r\nfunction SignInScreen(props) {\r\n    const [user ,setuser] = useState({\r\n        username :\"\",\r\n        password :\"\"\r\n    })\r\n\r\n    const register = (e) =>{\r\n        e.preventDefault()\r\n        props.handlenewUser(user)\r\n    }\r\n    const signIn = (e) =>{\r\n        e.preventDefault()\r\n        // console.log(user)\r\n        props.handleSignInUser(user)\r\n    }\r\n\r\n  return (\r\n    <div className=\"signinScren\">\r\n      <form action=\"\">\r\n        <p style = {{\r\n          textAlign : \"left\",\r\n          color : `${!props.textcolor ? \"green\" : \"red\"}`\r\n          \r\n        }} >{props.status}</p>\r\n        <h1>Sign In</h1>\r\n        <input value = {user.username} onChange = {(e)=> setuser({...user ,username : e.target.value})} type=\"email\" placeholder=\"Email\" />\r\n        <input value = {user.password} onChange = {(e)=> setuser({...user ,password : e.target.value})} type=\"password\" placeholder=\"Password\" />\r\n        <button onClick={signIn} type=\"submit\">Sign In</button>\r\n        <h4>\r\n          <span className=\"grayText\">New to Netflix?</span>{\" \"}\r\n          <span className=\"SignUpLink\" onClick={register}>Sign Up now.</span>{\" \"}\r\n        </h4>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignInScreen;\r\n"]},"metadata":{},"sourceType":"module"}