{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\netflix-clone\\\\src\\\\Components\\\\LoginScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./LoginScreen.css\";\nimport SignInScreen from \"./SignInScreen\";\nimport AboutApp from \"./AboutApp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction LoginScreen(prop) {\n  _s();\n\n  const [show, handleShow] = useState(false);\n  const [signIn, setSignIn] = useState(false);\n\n  const handleSignInUser = userDetail => {\n    // console.log(userDetail)\n    prop.handleUser(userDetail);\n  };\n\n  const transitionNavBar = () => {\n    if (window.scrollY > 100) {\n      handleShow(true);\n    } else {\n      handleShow(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", transitionNavBar);\n    return () => {\n      window.removeEventListener(\"scroll\", transitionNavBar);\n    };\n  }, []);\n\n  const loginStatus = status => {\n    setSignIn(status);\n    console.log(status);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginScreen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login_bg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `loginNav ${show && \"loginNavBg\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"logo\",\n          src: \"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"\",\n            id: \"\",\n            className: \"langauge navlang\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"English\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Hindi\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSignIn(true),\n            className: \"signbtn\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bggradiant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginBody\",\n        children: signIn ? /*#__PURE__*/_jsxDEV(SignInScreen, {\n          handleSignInUser: handleSignInUser,\n          handlenewUser: prop.handleNewUser,\n          status: prop.status,\n          textcolor: prop.color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Unlimited movies, TV shows and more.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Watch anywhere. Cancel anytime.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Ready to watch? Enter your email to create or restart your membership.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loginScreenInput\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                placeholder: \"Email Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setSignIn(true),\n                className: \"getstartbtn\",\n                children: \"GET STARTTED\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), signIn ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"borderbottom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), signIn ? null : /*#__PURE__*/_jsxDEV(AboutApp, {\n      loginStatus: loginStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginScreen, \"jWLLNmT0LjTW8xLScYii+HVqPPk=\");\n\n_c = LoginScreen;\nexport default LoginScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"sources":["E:/Projects/netflix-clone/src/Components/LoginScreen.jsx"],"names":["React","useState","useEffect","SignInScreen","AboutApp","LoginScreen","prop","show","handleShow","signIn","setSignIn","handleSignInUser","userDetail","handleUser","transitionNavBar","window","scrollY","addEventListener","removeEventListener","loginStatus","status","console","log","handleNewUser","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./LoginScreen.css\";\r\nimport SignInScreen from \"./SignInScreen\";\r\nimport AboutApp from \"./AboutApp\";\r\n\r\nfunction LoginScreen(prop) {\r\n  const [show, handleShow] = useState(false);\r\n  const [signIn, setSignIn] = useState(false);\r\n  const handleSignInUser = (userDetail) => {\r\n    // console.log(userDetail)\r\n    prop.handleUser(userDetail);\r\n  };\r\n\r\n  const transitionNavBar = () => {\r\n    if (window.scrollY > 100) {\r\n      handleShow(true);\r\n    } else {\r\n      handleShow(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", transitionNavBar);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", transitionNavBar);\r\n    };\r\n  }, []);\r\n\r\n  const loginStatus = (status) => {\r\n    setSignIn(status)\r\n    console.log(status)\r\n  }\r\n\r\n  return (\r\n    <div className=\"loginScreen\">\r\n      <div className=\"login_bg\">\r\n        <div className={`loginNav ${show && \"loginNavBg\"}`}>\r\n          <img\r\n            className=\"logo\"\r\n            src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\"\r\n            alt=\"\"\r\n          />\r\n          <div className=\"right\">\r\n            <select name=\"\" id=\"\" className=\"langauge navlang\">\r\n              <option value=\"\">English</option>\r\n              <option value=\"\">Hindi</option>\r\n            </select>\r\n            <button onClick={() => setSignIn(true)} className=\"signbtn\">\r\n              Sign In\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bggradiant\"></div>\r\n        <div className=\"loginBody\">\r\n          {signIn ? (\r\n            <SignInScreen\r\n              handleSignInUser={handleSignInUser}\r\n              handlenewUser={prop.handleNewUser}\r\n              status = {prop.status}\r\n              textcolor = {prop.color}\r\n            />\r\n          ) : (\r\n            <>\r\n              <h1>Unlimited movies, TV shows and more.</h1>\r\n              <h2>Watch anywhere. Cancel anytime.</h2>\r\n              <h3>\r\n                Ready to watch? Enter your email to create or restart your\r\n                membership.\r\n              </h3>\r\n\r\n              <div className=\"loginScreenInput\">\r\n                <form>\r\n                  <input type=\"email\" placeholder=\"Email Address\" />\r\n                  <button\r\n                    onClick={() => setSignIn(true)}\r\n                    className=\"getstartbtn\"\r\n                  >\r\n                    GET STARTTED\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n        {signIn ? null : <div className=\"borderbottom\"></div>}\r\n      </div>\r\n      {signIn ? null : <AboutApp loginStatus = {loginStatus}/>}\r\n      {/* <AboutApp /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginScreen;\r\n"]},"metadata":{},"sourceType":"module"}