{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\netflix-clone\\\\src\\\\Components\\\\Banner.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"../axios\";\nimport requests from \"../requests\";\nimport \"./Banner.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Banner(props) {\n  _s();\n\n  const [movie, setMovie] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(requests.fetchNetflixOriginals);\n      setMovie(request.data.results[Math.floor(Math.random() * request.data.results.length - 1)]);\n      return request;\n    }\n\n    fetchData();\n  }, []); //   console.log(movie);\n\n  function truncate(str, n) {\n    return (str === null || str === void 0 ? void 0 : str.length) > n ? str.substr(0, n - 1) + \"...\" : str;\n  }\n\n  const handleMoviePlay = () => {\n    console.log(\"Movie Clicked\");\n    history.push('./movie');\n    props.handleMoviePlay(movie);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"banner\",\n    style: {\n      backgroundSize: \"cover\",\n      backgroundImage: `url(\n            \"https://image.tmdb.org/t/p/original/${movie === null || movie === void 0 ? void 0 : movie.backdrop_path}\"\n         )`,\n      backgroundPosition: \"top center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bannercontent\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"banner_title\",\n        children: (movie === null || movie === void 0 ? void 0 : movie.title) || (movie === null || movie === void 0 ? void 0 : movie.name) || (movie === null || movie === void 0 ? void 0 : movie.original_name)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner_buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleMoviePlay,\n          className: \"banner_button\",\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"banner_button\",\n          children: \"My List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"banner_description\",\n        children: truncate(movie === null || movie === void 0 ? void 0 : movie.overview, 120)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner_fadebottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Banner, \"wBWtIT2Ky8LAu438YTGloGUrUuM=\", false, function () {\n  return [useHistory];\n});\n\n_c = Banner;\nexport default Banner;\n\nvar _c;\n\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"sources":["E:/Projects/netflix-clone/src/Components/Banner.jsx"],"names":["React","useState","useEffect","useHistory","axios","requests","Banner","props","movie","setMovie","history","fetchData","request","get","fetchNetflixOriginals","data","results","Math","floor","random","length","truncate","str","n","substr","handleMoviePlay","console","log","push","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","title","name","original_name","overview"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"../axios\";\r\nimport requests from \"../requests\";\r\nimport \"./Banner.css\"\r\n\r\nfunction Banner(props) {\r\n  const [movie, setMovie] = useState([]);\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchNetflixOriginals);\r\n      setMovie(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length - 1)\r\n        ]\r\n      );\r\n\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n//   console.log(movie);\r\n\r\n  function truncate(str , n){\r\n      return str?.length > n ? str.substr(0, n-1) + \"...\" : str;\r\n  }\r\n\r\n  const handleMoviePlay = () => {\r\n    console.log(\"Movie Clicked\")\r\n    history.push('./movie')\r\n    props.handleMoviePlay(movie)\r\n  }\r\n\r\n  return (\r\n    <header className=\"banner\" \r\n     style = {{\r\n         backgroundSize :\"cover\",\r\n         backgroundImage : `url(\r\n            \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\r\n         )`,\r\n         backgroundPosition : \"top center\"\r\n     }}\r\n    >\r\n        \r\n        <div className=\"bannercontent\">\r\n            <h1 className =\"banner_title\">\r\n                {movie?.title || movie?.name || movie?.original_name}\r\n            </h1>\r\n            <div className=\"banner_buttons\">\r\n                <button onClick = {handleMoviePlay} className=\"banner_button\">Play</button>\r\n                <button className=\"banner_button\">My List</button>\r\n            </div>\r\n            \r\n            <h1 className =\"banner_description\">\r\n                {truncate(movie?.overview , 120)}\r\n            </h1>\r\n        </div>\r\n        <div className=\"banner_fadebottom\"></div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Banner;\r\n"]},"metadata":{},"sourceType":"module"}