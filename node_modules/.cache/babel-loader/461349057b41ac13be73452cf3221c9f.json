{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\netflix-clone\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Homepage from \"./Components/Homepage\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport LoginScreen from \"./Components/LoginScreen\";\nimport ProfileScreen from \"./Components/ProfileScreen\";\nimport MovieScreen from \"./Components/MovieScreen\";\nimport Movie from \"./Components/Movie\";\nimport SearchedMovie from \"./Components/SearchedMovie\";\nimport TvShows from \"./Components/TvShows\";\nimport NavMovie from \"./Components/NavMovie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [user, setuser] = useState(null); // var loggeduser = null;\n\n  const [userInOurApp, setuserInOurApp] = useState([]); // const loggeduser = useRef(null)\n\n  const [movieData, setmovieData] = useState({\n    title: \"\",\n    image: \"\",\n    desc: \"\"\n  });\n  const [status, setstatus] = useState(null);\n  const [color, setcolor] = useState(null);\n  const [moviedataplay, setmoviedataplay] = useState(\"\");\n  const [searchedMovieData, setSearchedMovieData] = useState([]);\n  useEffect(() => {\n    console.log(user); // loggeduser.current = user\n    // console.log(loggeduser)\n  }, [user]);\n\n  const handleUser = userdetail => {\n    // console.log(userdetail)\n    for (let i = 0; i < userInOurApp.length; i++) {\n      if (userInOurApp[i].username === userdetail.username && userInOurApp[i].password === userdetail.password) {\n        // console.log(user);\n        setuser(userdetail.username);\n        setstatus(null);\n        setcolor(null); // var user = userdetail.username;\n        // let currentUser = user\n        // console.log(user);\n        // console.log(userdetail);\n        // console.log(userInOurApp)\n\n        return;\n      }\n    } // alert(\"No Netflix account is registered with this mail\\nYou need to Sign Up !!\");\n\n\n    setstatus(\"Account Not Found\");\n    setcolor(\"red\");\n  };\n\n  const handleNewUser = newuserdetail => {\n    for (let i = 0; i < userInOurApp.length; i++) {\n      if (userInOurApp[i].username === newuserdetail.username && userInOurApp[i].password === newuserdetail.password) {\n        // console.log(\"Already Registered\")4\n        // alert(\"Already Registered a Netflix account with this mail\");\n        setstatus(\"Already Registered\");\n        setcolor(\"red\");\n        return;\n      }\n    }\n\n    setuserInOurApp([...userInOurApp, newuserdetail]); // alert(\"Succefully Created a Netflix account with this mail\");\n\n    setstatus(\"Succefully Created an account\");\n    setcolor(null); // console.log(\"Successfully Registered\")\n  };\n\n  const setLogoutThing = logoutthing => {\n    setuser(logoutthing); // var user = [logoutthing]\n  };\n\n  const gettingMoviedata = (title, image, desc) => {\n    setmovieData({\n      title: title,\n      image: image,\n      desc: desc\n    });\n  };\n\n  const datafromMovieScreenItself = (title, image, desc) => {\n    setmovieData({\n      title: title,\n      image: image,\n      desc: desc\n    });\n  };\n\n  const handleMoviePlay = movie => {\n    setmoviedataplay(movie);\n  };\n\n  const getMoviedata = moviedata => {\n    setmoviedataplay(moviedata);\n  };\n\n  const gettingSearchedMovieData = gotTheSearchedMovieData => {\n    // console.log(gotTheSearchedMovieData)\n    setSearchedMovieData(gotTheSearchedMovieData);\n  };\n\n  const takingData = (title, image, desc) => {\n    setmovieData({\n      title: title,\n      image: image,\n      desc: desc\n    });\n  };\n\n  const gettingTvShowsData = (title, image, desc) => {\n    setmovieData({\n      title: title,\n      image: image,\n      desc: desc\n    });\n  };\n\n  const gettingNavMoviesData = (title, image, desc) => {\n    setmovieData({\n      title: title,\n      image: image,\n      desc: desc\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: !user ? /*#__PURE__*/_jsxDEV(LoginScreen, {\n        handleUser: handleUser,\n        handleNewUser: handleNewUser,\n        status: status,\n        color: color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"Net/\",\n          children: /*#__PURE__*/_jsxDEV(Homepage, {\n            gettingMoviedata: gettingMoviedata,\n            handleMoviePlay: handleMoviePlay,\n            gettingSearchedMovieData: gettingSearchedMovieData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/profile\",\n          children: /*#__PURE__*/_jsxDEV(ProfileScreen, {\n            user: user,\n            setLogoutThing: setLogoutThing\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/film\",\n          children: /*#__PURE__*/_jsxDEV(MovieScreen, {\n            moviedata: movieData,\n            datafromMovieScreenItself: datafromMovieScreenItself,\n            getMoviedata: getMoviedata,\n            gettingSearchedMovieData: gettingSearchedMovieData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/movie\",\n          children: /*#__PURE__*/_jsxDEV(Movie, {\n            moviedataplay: moviedataplay\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/searchedmovie\",\n          children: /*#__PURE__*/_jsxDEV(SearchedMovie, {\n            movieDATA: searchedMovieData,\n            takingData: takingData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/tvshows\",\n          children: /*#__PURE__*/_jsxDEV(TvShows, {\n            gettingTvShowsData: gettingTvShowsData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/navmovie\",\n          children: /*#__PURE__*/_jsxDEV(NavMovie, {\n            gettingNavMoviesData: gettingNavMoviesData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Wq6WY8RfxRGe4rtjpmkmomoPq9s=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/Projects/netflix-clone/src/App.js"],"names":["React","useEffect","useState","Homepage","BrowserRouter","Router","Switch","Route","LoginScreen","ProfileScreen","MovieScreen","Movie","SearchedMovie","TvShows","NavMovie","App","user","setuser","userInOurApp","setuserInOurApp","movieData","setmovieData","title","image","desc","status","setstatus","color","setcolor","moviedataplay","setmoviedataplay","searchedMovieData","setSearchedMovieData","console","log","handleUser","userdetail","i","length","username","password","handleNewUser","newuserdetail","setLogoutThing","logoutthing","gettingMoviedata","datafromMovieScreenItself","handleMoviePlay","movie","getMoviedata","moviedata","gettingSearchedMovieData","gotTheSearchedMovieData","takingData","gettingTvShowsData","gettingNavMoviesData"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Homepage from \"./Components/Homepage\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport LoginScreen from \"./Components/LoginScreen\";\nimport ProfileScreen from \"./Components/ProfileScreen\";\nimport MovieScreen from \"./Components/MovieScreen\";\nimport Movie from \"./Components/Movie\";\nimport SearchedMovie from \"./Components/SearchedMovie\";\nimport TvShows from \"./Components/TvShows\";\nimport NavMovie from \"./Components/NavMovie\";\n\nfunction App() {\n  const [user, setuser] = useState(null);\n  // var loggeduser = null;\n  const [userInOurApp, setuserInOurApp] = useState([]);\n  // const loggeduser = useRef(null)\n  const [movieData, setmovieData] = useState({\n    title: \"\",\n    image: \"\",\n    desc: \"\",\n  });\n\n  const [status, setstatus] = useState(null);\n\n  const [color, setcolor] = useState(null);\n\n  const [moviedataplay, setmoviedataplay] = useState(\"\");\n\n  const [searchedMovieData, setSearchedMovieData] = useState([]);\n\n  useEffect(() => {\n    console.log(user);\n    // loggeduser.current = user\n    // console.log(loggeduser)\n  }, [user]);\n\n  const handleUser = (userdetail) => {\n    // console.log(userdetail)\n    for (let i = 0; i < userInOurApp.length; i++) {\n      if (\n        userInOurApp[i].username === userdetail.username &&\n        userInOurApp[i].password === userdetail.password\n      ) {\n        // console.log(user);\n        setuser(userdetail.username);\n        setstatus(null);\n        setcolor(null);\n        // var user = userdetail.username;\n        // let currentUser = user\n        // console.log(user);\n        // console.log(userdetail);\n        // console.log(userInOurApp)\n        return;\n      }\n    }\n    // alert(\"No Netflix account is registered with this mail\\nYou need to Sign Up !!\");\n    setstatus(\"Account Not Found\");\n    setcolor(\"red\");\n  };\n\n  const handleNewUser = (newuserdetail) => {\n    for (let i = 0; i < userInOurApp.length; i++) {\n      if (\n        userInOurApp[i].username === newuserdetail.username &&\n        userInOurApp[i].password === newuserdetail.password\n      ) {\n        // console.log(\"Already Registered\")4\n        // alert(\"Already Registered a Netflix account with this mail\");\n        setstatus(\"Already Registered\");\n        setcolor(\"red\");\n        return;\n      }\n    }\n    setuserInOurApp([...userInOurApp, newuserdetail]);\n    // alert(\"Succefully Created a Netflix account with this mail\");\n    setstatus(\"Succefully Created an account\");\n    setcolor(null);\n    // console.log(\"Successfully Registered\")\n  };\n\n  const setLogoutThing = (logoutthing) => {\n    setuser(logoutthing);\n    // var user = [logoutthing]\n  };\n\n  const gettingMoviedata = (title, image, desc) => {\n    setmovieData({ title: title, image: image, desc: desc });\n  };\n\n  const datafromMovieScreenItself = (title, image, desc) => {\n    setmovieData({ title: title, image: image, desc: desc });\n  };\n\n  const handleMoviePlay = (movie) => {\n    setmoviedataplay(movie);\n  };\n\n  const getMoviedata = (moviedata) => {\n    setmoviedataplay(moviedata);\n  };\n\n  const gettingSearchedMovieData = (gotTheSearchedMovieData) => {\n    // console.log(gotTheSearchedMovieData)\n    setSearchedMovieData(gotTheSearchedMovieData);\n  };\n\n  const takingData = (title ,image , desc) => {\n    setmovieData({ title: title, image: image, desc: desc });\n  }\n\n  const gettingTvShowsData = (title , image ,desc) => {\n    setmovieData({ title: title, image: image, desc: desc });\n  }\n\n  const gettingNavMoviesData = (title , image , desc) => {\n    setmovieData({ title: title, image: image, desc: desc });\n  }\n  return (\n    <div className=\"App\">\n      <Router>\n        {!user ? (\n          <LoginScreen\n            handleUser={handleUser}\n            handleNewUser={handleNewUser}\n            status={status}\n            color={color}\n          />\n        ) : (\n          <Switch>\n            <Route exact path=\"Net/\">\n              <Homepage\n                gettingMoviedata={gettingMoviedata}\n                handleMoviePlay={handleMoviePlay}\n                gettingSearchedMovieData={gettingSearchedMovieData}\n              />\n            </Route>\n            <Route path=\"/profile\">\n              <ProfileScreen user={user} setLogoutThing={setLogoutThing} />\n            </Route>\n            <Route path=\"/film\">\n              <MovieScreen\n                moviedata={movieData}\n                datafromMovieScreenItself={datafromMovieScreenItself}\n                getMoviedata={getMoviedata}\n                gettingSearchedMovieData={gettingSearchedMovieData}\n              />\n            </Route>\n            <Route path=\"/movie\">\n              <Movie moviedataplay={moviedataplay} />\n            </Route>\n            <Route path=\"/searchedmovie\">\n              <SearchedMovie movieDATA={searchedMovieData} takingData = {takingData}/>\n            </Route>\n            <Route path = \"/tvshows\">\n              <TvShows gettingTvShowsData = {gettingTvShowsData}/>\n            </Route>\n            <Route path = \"/navmovie\">\n              <NavMovie gettingNavMoviesData = {gettingNavMoviesData}/>\n            </Route>\n          </Switch>\n        )}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}